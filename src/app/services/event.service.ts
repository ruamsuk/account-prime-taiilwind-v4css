import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';

/**
 * MenuItemsService ‚Üí ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å eventService.openUserDialog() ‚Üí ‡∏™‡πà‡∏á event
 * app.component ‚Üí subscribe ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏±‡∏ö event ‚Üí ‡πÄ‡∏°‡∏∑‡πà‡∏≠ event ‡∏°‡∏≤‡∏ñ‡∏∂‡∏á ‚Üí ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å userDialog()
 *
 * - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å component ‡∏à‡∏≤‡∏Å service ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß‡∏ï‡πà‡∏≠ Angular ‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£ SOLID principle ‡πÅ‡∏•‡∏∞‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î
 * - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ scale ‡πÅ‡∏•‡∏∞ maintain ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏°‡∏≤‡∏Å
 * - ‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏µ‡∏Å‡∏î‡πâ‡∏ß‡∏¢ (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° event ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏°‡∏≤‡∏Å)
 * - ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ event ‡∏´‡∏£‡∏∑‡∏≠ observable ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏∏‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏°‡∏≠ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô Angular ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
 *   ‡πÅ‡∏•‡∏∞‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏á‡πà‡∏≤‡∏¢‡∏¢‡∏¥‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô üòä‚ú®
 * */

@Injectable({
  providedIn: 'root'
})
export class EventService {
  userDialogTrigger = new Subject<void>();

  openUserDialog() {
    this.userDialogTrigger.next();
  }

  userDialogListener() {
    return this.userDialogTrigger.asObservable();
  }
}
